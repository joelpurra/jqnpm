#!/usr/bin/env bash
set -e

# Must be executed in this file.
# Used to recursively call jqnpm.
jqnpmSourceFile="${BASH_SOURCE}"

# Helper functions
# TODO: write tests per function.
source "${BASH_SOURCE%/*}/shared/functions/debug.sh"
source "${BASH_SOURCE%/*}/shared/functions/basic.sh"
source "${BASH_SOURCE%/*}/shared/functions/filesystem-temp.sh"


# Metadata
source "${BASH_SOURCE%/*}/shared/metadata/package-root.sh"
source "${BASH_SOURCE%/*}/shared/metadata/jq.json.sh"
source "${BASH_SOURCE%/*}/shared/metadata/main.jq.sh"
source "${BASH_SOURCE%/*}/shared/metadata/validation.sh"
source "${BASH_SOURCE%/*}/shared/metadata/read.sh"
source "${BASH_SOURCE%/*}/shared/metadata/update.sh"


# Workarounds
# TODO: remove when jq is confirmed to fully support whatever workarounds there are.
source "${BASH_SOURCE%/*}/shared/functions/workarounds-jq.sh"


# Actions
# TODO: implement other actions.
# TODO: write tests per function.
source "${BASH_SOURCE%/*}/shared/actions/help.sh"
source "${BASH_SOURCE%/*}/shared/actions/initialize.sh"
source "${BASH_SOURCE%/*}/shared/actions/fetch.sh"
source "${BASH_SOURCE%/*}/shared/actions/install.sh"
source "${BASH_SOURCE%/*}/shared/actions/execute.sh"


### Always executed

function main {
	# TODO: implement other actions.
	local action="$1"
	(( "$#" > 0 )) && shift

	# TODO: use a system like "exec jqnpm-$action.sh".
	case "$action" in
		'fetch')
			fetch "$@"
			;;
		'install')
			install "$@"
			;;
		'initialize'|'init')
			initialize "$@"
			;;
		'execute'|'exec')
			execute "$@"
			;;
		'help')
			help "$@"
			;;
		*)
			help "$@"
			;;
	esac
}

function initJqnpm {
	[[ -z $(which jq) ]] && die 1 "jq is required."
	jq --null-input --join-output -L '.' '"x"' &>/dev/null || die 1 "A newer jq with module support (etcetera) is required."

	# TODO: check for `git` with support for `git clone --branch <tag> --single-branch --depth 1`.
	[[ -z $(which git) ]] && die 1 "git is required."

	# TODO: normalize configuration, configuration defaults and internal variable names.
	config_default_packagesCache="$HOME/.jq/packages"
	config_default_remoteBase="git://github.com"
	config_default_remoteSuffix=".git"

	packageMetadataFilename="jq.json"
	packageMetadataDirectoryName=".jq"
	localJqPackageBase="${packageMetadataDirectoryName}/packages"
	defaultPackageJqFile="jq/main.jq"
}

initJqnpm "$@";
main "$@";
